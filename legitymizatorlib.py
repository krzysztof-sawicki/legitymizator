#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.5 on Wed Sep 11 10:35:12 2024
#

import wx

# begin wxGlade: dependencies
import wx.adv
# end wxGlade

# begin wxGlade: extracode
import wx.lib.pdfviewer
# end wxGlade


class Legitymizator(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: Legitymizator.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE | wx.MAXIMIZE | wx.MINIMIZE
		wx.Frame.__init__(self, *args, **kwds)
		self.SetTitle("Legitymizator")

		# Menu Bar
		self.frame_menubar = wx.MenuBar()
		wxglade_tmp_menu = wx.Menu()
		item = wxglade_tmp_menu.Append(wx.ID_ANY, "&Nowa baza danych", "")
		self.Bind(wx.EVT_MENU, self.onNewDb, item)
		item = wxglade_tmp_menu.Append(wx.ID_ANY, u"&Otwórz istniejącą bazę danych", "")
		self.Bind(wx.EVT_MENU, self.onOpenDb, item)
		item = wxglade_tmp_menu.Append(wx.ID_ANY, "&Ustawienia bazy danych", "")
		self.Bind(wx.EVT_MENU, self.onDbSettings, item)
		self.frame_menubar.Append(wxglade_tmp_menu, "&Plik")
		self.SetMenuBar(self.frame_menubar)
		# Menu Bar end

		self.frame_statusbar = self.CreateStatusBar(1)
		self.frame_statusbar.SetStatusWidths([-1])
		# statusbar fields
		frame_statusbar_fields = ["Legitymizator v0.1"]
		for i in range(len(frame_statusbar_fields)):
			self.frame_statusbar.SetStatusText(frame_statusbar_fields[i], i)

		self.mainPanel = wx.Panel(self, wx.ID_ANY)

		sizer_1 = wx.BoxSizer(wx.VERTICAL)

		sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_1.Add(sizer_3, 0, wx.EXPAND, 0)

		label_9 = wx.StaticText(self.mainPanel, wx.ID_ANY, "Baza danych")
		sizer_3.Add(label_9, 0, wx.ALL, 1)

		self.dbNameStaticText = wx.StaticText(self.mainPanel, wx.ID_ANY, "-")
		sizer_3.Add(self.dbNameStaticText, 0, wx.ALL, 1)

		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)

		self.documentListCtrl = wx.ListCtrl(self.mainPanel, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_SINGLE_SEL | wx.LC_VRULES)
		self.documentListCtrl.AppendColumn("Numer legitymacji", format=wx.LIST_FORMAT_LEFT, width=150)
		self.documentListCtrl.AppendColumn("Imiona i nazwisko", format=wx.LIST_FORMAT_LEFT, width=300)
		self.documentListCtrl.AppendColumn("PESEL", format=wx.LIST_FORMAT_LEFT, width=150)
		sizer_2.Add(self.documentListCtrl, 1, wx.EXPAND, 0)

		self.documentFormSizer = wx.BoxSizer(wx.VERTICAL)
		sizer_2.Add(self.documentFormSizer, 2, wx.ALL | wx.EXPAND, 4)

		grid_sizer_1 = wx.FlexGridSizer(9, 2, 2, 2)
		self.documentFormSizer.Add(grid_sizer_1, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 0)

		label_1 = wx.StaticText(self.mainPanel, wx.ID_ANY, "Imiona i nazwisko")
		grid_sizer_1.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.fStudentName = wx.TextCtrl(self.mainPanel, wx.ID_ANY, "")
		self.fStudentName.SetMinSize((300, 30))
		grid_sizer_1.Add(self.fStudentName, 1, wx.ALIGN_CENTER | wx.ALL, 2)

		label_8 = wx.StaticText(self.mainPanel, wx.ID_ANY, "PESEL")
		grid_sizer_1.Add(label_8, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.fPESEL = wx.TextCtrl(self.mainPanel, wx.ID_ANY, "", style=wx.TE_RIGHT)
		self.fPESEL.SetMinSize((300, 30))
		self.fPESEL.SetBackgroundColour(wx.Colour(255, 127, 0))
		grid_sizer_1.Add(self.fPESEL, 1, wx.ALIGN_CENTER | wx.ALL, 2)

		label_2 = wx.StaticText(self.mainPanel, wx.ID_ANY, "Data urodzenia")
		grid_sizer_1.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.fBirthDate = wx.adv.GenericCalendarCtrl(self.mainPanel, wx.ID_ANY)
		grid_sizer_1.Add(self.fBirthDate, 2, wx.ALIGN_CENTER | wx.ALL, 2)

		label_4 = wx.StaticText(self.mainPanel, wx.ID_ANY, u"Nazwa i adres szkoły")
		grid_sizer_1.Add(label_4, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.fSchool = wx.TextCtrl(self.mainPanel, wx.ID_ANY, "", style=wx.TE_MULTILINE)
		self.fSchool.SetMinSize((300, 100))
		grid_sizer_1.Add(self.fSchool, 2, wx.ALIGN_CENTER | wx.ALL, 2)

		label_5 = wx.StaticText(self.mainPanel, wx.ID_ANY, u"Dyrektor szkoły")
		grid_sizer_1.Add(label_5, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.fPrincipal = wx.TextCtrl(self.mainPanel, wx.ID_ANY, "")
		self.fPrincipal.SetMinSize((300, 30))
		grid_sizer_1.Add(self.fPrincipal, 1, wx.ALIGN_CENTER | wx.ALL, 2)

		label_6 = wx.StaticText(self.mainPanel, wx.ID_ANY, "Data wydania")
		grid_sizer_1.Add(label_6, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.fIssueDate = wx.adv.GenericCalendarCtrl(self.mainPanel, wx.ID_ANY)
		grid_sizer_1.Add(self.fIssueDate, 2, wx.ALIGN_CENTER | wx.ALL, 2)

		label_10 = wx.StaticText(self.mainPanel, wx.ID_ANY, "Numer legitymacji")
		grid_sizer_1.Add(label_10, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.fIdNumber = wx.TextCtrl(self.mainPanel, wx.ID_ANY, "", style=wx.TE_RIGHT)
		self.fIdNumber.SetMinSize((300, 30))
		grid_sizer_1.Add(self.fIdNumber, 1, wx.ALIGN_CENTER | wx.ALL, 2)

		self.RecordChangeIndicator = wx.StaticText(self.mainPanel, wx.ID_ANY, "Niezapisane zmiany", style=wx.ALIGN_CENTER_HORIZONTAL)
		self.RecordChangeIndicator.SetBackgroundColour(wx.Colour(255, 127, 0))
		self.RecordChangeIndicator.SetFont(wx.Font(10, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
		self.RecordChangeIndicator.Hide()
		grid_sizer_1.Add(self.RecordChangeIndicator, 0, wx.ALIGN_CENTER | wx.ALL, 5)

		grid_sizer_1.Add((20, 20), 1, wx.EXPAND, 0)

		sizer_4 = wx.BoxSizer(wx.VERTICAL)
		grid_sizer_1.Add(sizer_4, 1, wx.EXPAND, 0)

		self.GenerateFileButton = wx.Button(self.mainPanel, wx.ID_ANY, "Generuj plik PDF")
		sizer_4.Add(self.GenerateFileButton, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 2)

		self.PrintButton = wx.Button(self.mainPanel, wx.ID_ANY, u"Wyślij PDF do druku")
		sizer_4.Add(self.PrintButton, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)

		self.SaveRecordButton = wx.Button(self.mainPanel, wx.ID_ANY, "Zapisz rekord w bazie danych")
		sizer_4.Add(self.SaveRecordButton, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 2)

		self.NewRecordButton = wx.Button(self.mainPanel, wx.ID_ANY, "Nowy rekord")
		sizer_4.Add(self.NewRecordButton, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 2)

		grid_sizer_1.Add((20, 20), 1, wx.EXPAND, 0)

		sizer_8 = wx.BoxSizer(wx.VERTICAL)
		sizer_2.Add(sizer_8, 1, wx.ALL | wx.EXPAND, 2)

		label_7 = wx.StaticText(self.mainPanel, wx.ID_ANY, u"Zdjęcie")
		sizer_8.Add(label_7, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)

		self.photo = wx.StaticBitmap(self.mainPanel, wx.ID_ANY, wx.Bitmap(225, 307))
		self.photo.SetMinSize((225, 307))
		sizer_8.Add(self.photo, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 0)

		self.editPhotoSwitch = wx.ToggleButton(self.mainPanel, wx.ID_ANY, u"Modyfikacja zdjęcia")
		self.editPhotoSwitch.Enable(False)
		sizer_8.Add(self.editPhotoSwitch, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)

		self.loadFileButton = wx.Button(self.mainPanel, wx.ID_ANY, u"Załaduj zdjęcie")
		sizer_8.Add(self.loadFileButton, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)

		static_line_1 = wx.StaticLine(self.mainPanel, wx.ID_ANY)
		sizer_8.Add(static_line_1, 0, wx.ALL | wx.EXPAND, 4)

		label_3 = wx.StaticText(self.mainPanel, wx.ID_ANY, u"Podgląd legitymacji")
		sizer_8.Add(label_3, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)

		self.IDView = wx.StaticBitmap(self.mainPanel, wx.ID_ANY, wx.Bitmap(400, 253))
		self.IDView.SetMinSize((400, 253))
		sizer_8.Add(self.IDView, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 4)

		self.pdfViewer = wx.lib.pdfviewer.pdfViewer(self.mainPanel, wx.ID_ANY, pos=(-1,-1), size=(-1,-1), style=0)
		self.pdfViewer.SetMinSize((400, 253))
		self.pdfViewer.Hide()
		sizer_8.Add(self.pdfViewer, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)

		self.viewGenerateButton = wx.Button(self.mainPanel, wx.ID_ANY, u"Generuj podgląd")
		sizer_8.Add(self.viewGenerateButton, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)

		self.mainPanel.SetSizer(sizer_1)

		sizer_1.Fit(self)
		self.Layout()
		self.Centre()

		self.Bind(wx.EVT_MOUSEWHEEL, self.photoMouseWheel, self.mainPanel)
		self.Bind(wx.EVT_LIST_ITEM_SELECTED, self.onDocumentListCtrlSelect, self.documentListCtrl)
		self.Bind(wx.EVT_TEXT, self.onFStudentNameEnter, self.fStudentName)
		self.Bind(wx.EVT_TEXT, self.onfPESELEnter, self.fPESEL)
		self.Bind(wx.adv.EVT_CALENDAR_SEL_CHANGED, self.onFBirthDateChange, self.fBirthDate)
		self.Bind(wx.EVT_TEXT, self.onFSchoolEnter, self.fSchool)
		self.Bind(wx.EVT_TEXT, self.onFPrincipalEnter, self.fPrincipal)
		self.Bind(wx.adv.EVT_CALENDAR_SEL_CHANGED, self.onFIssueDateChange, self.fIssueDate)
		self.Bind(wx.EVT_TEXT, self.onFIdNumberEnter, self.fIdNumber)
		self.Bind(wx.EVT_BUTTON, self.onGenerateFileButton, self.GenerateFileButton)
		self.Bind(wx.EVT_BUTTON, self.onPrintButton, self.PrintButton)
		self.Bind(wx.EVT_BUTTON, self.onSaveRecordButton, self.SaveRecordButton)
		self.Bind(wx.EVT_BUTTON, self.onNewRecordButton, self.NewRecordButton)
		self.Bind(wx.EVT_LEFT_DOWN, self.photoMouseDown, self.photo)
		self.Bind(wx.EVT_LEFT_UP, self.photoMouseUp, self.photo)
		self.Bind(wx.EVT_MOTION, self.photoMotion, self.photo)
		self.Bind(wx.EVT_MOUSEWHEEL, self.photoMouseWheel, self.photo)
		self.Bind(wx.EVT_BUTTON, self.openPhotoFileSelector, self.loadFileButton)
		self.Bind(wx.EVT_BUTTON, self.onViewGenerateButton, self.viewGenerateButton)
		self.Bind(wx.EVT_CLOSE, self.onFrameClose, self)
		# end wxGlade

	def onNewDb(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onNewDb' not implemented!")
		event.Skip()

	def onOpenDb(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onOpenDb' not implemented!")
		event.Skip()

	def onDbSettings(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onDbSettings' not implemented!")
		event.Skip()

	def photoMouseWheel(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'photoMouseWheel' not implemented!")
		event.Skip()

	def onDocumentListCtrlSelect(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onDocumentListCtrlSelect' not implemented!")
		event.Skip()

	def onFStudentNameEnter(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onFStudentNameEnter' not implemented!")
		event.Skip()

	def onfPESELEnter(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onfPESELEnter' not implemented!")
		event.Skip()

	def onFBirthDateChange(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onFBirthDateChange' not implemented!")
		event.Skip()

	def onFSchoolEnter(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onFSchoolEnter' not implemented!")
		event.Skip()

	def onFPrincipalEnter(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onFPrincipalEnter' not implemented!")
		event.Skip()

	def onFIssueDateChange(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onFIssueDateChange' not implemented!")
		event.Skip()

	def onFIdNumberEnter(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onFIdNumberEnter' not implemented!")
		event.Skip()

	def onGenerateFileButton(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onGenerateFileButton' not implemented!")
		event.Skip()

	def onPrintButton(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onPrintButton' not implemented!")
		event.Skip()

	def onSaveRecordButton(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onSaveRecordButton' not implemented!")
		event.Skip()

	def onNewRecordButton(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onNewRecordButton' not implemented!")
		event.Skip()

	def photoMouseDown(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'photoMouseDown' not implemented!")
		event.Skip()

	def photoMouseUp(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'photoMouseUp' not implemented!")
		event.Skip()

	def photoMotion(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'photoMotion' not implemented!")
		event.Skip()

	def openPhotoFileSelector(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'openPhotoFileSelector' not implemented!")
		event.Skip()

	def onViewGenerateButton(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onViewGenerateButton' not implemented!")
		event.Skip()

	def onFrameClose(self, event):  # wxGlade: Legitymizator.<event_handler>
		print("Event handler 'onFrameClose' not implemented!")
		event.Skip()

# end of class Legitymizator

class DBSettings(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: DBSettings.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.SetSize((436, 244))
		self.SetTitle("Ustawienia bazy danych")

		self.panel_1 = wx.Panel(self, wx.ID_ANY)

		sizer_1 = wx.FlexGridSizer(3, 2, 0, 0)

		label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, u"Nazwa szkoły")
		sizer_1.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.schoolNameCtrl = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_MULTILINE)
		self.schoolNameCtrl.SetMinSize((300, 130))
		sizer_1.Add(self.schoolNameCtrl, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 2)

		label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, u"Dyrektor szkoły")
		sizer_1.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.principalCtrl = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
		self.principalCtrl.SetMinSize((300, 30))
		sizer_1.Add(self.principalCtrl, 0, wx.ALIGN_CENTER | wx.ALL, 2)

		sizer_1.Add((20, 20), 0, wx.EXPAND, 0)

		self.settingsSaveButton = wx.Button(self.panel_1, wx.ID_ANY, "Zapisz zmiany")
		sizer_1.Add(self.settingsSaveButton, 0, wx.ALIGN_CENTER, 0)

		self.panel_1.SetSizer(sizer_1)

		self.Layout()

		self.Bind(wx.EVT_BUTTON, self.onSettingsSaveButton, self.settingsSaveButton)
		# end wxGlade

	def onSettingsSaveButton(self, event):  # wxGlade: DBSettings.<event_handler>
		print("Event handler 'onSettingsSaveButton' not implemented!")
		event.Skip()

# end of class DBSettings

class LegitymizatorApp(wx.App):
	def OnInit(self):
		self.frame = Legitymizator(None, wx.ID_ANY, "")
		self.SetTopWindow(self.frame)
		self.frame.Show()
		return True

# end of class LegitymizatorApp

if __name__ == "__main__":
	Legitymizator = LegitymizatorApp(0)
	Legitymizator.MainLoop()
